<?xml version="1.0" encoding="utf-8"?>
<project name="protobuf-net" default="all">
  <property name="nant.settings.currentframework" value="mono-3.5" />
  <property name="project.version" value="0.0.0.1"/>
  <property name="source.dir" value="."/>
  <property name="dependencies.dir" value="./Dependencies"/>
  <property name="build.dir" value="./bin/Debug"/>
  <property name="doc.dir" value="./docs"/>
  <property name="build.release" value="false" unless="${property::exists('build.release')}"/>
  <if test="${build.release}">
    <property name="build.dir" value="./bin/Release"/>
  </if>

  <target name="init">
    <mkdir dir="${build.dir}" failonerror="false"/>
    <mkdir dir="${doc.dir}" failonerror="false"/>
  </target>

  <target name="ProtoBuf" depends="init">
    <csc target="library" output="${build.dir}/${target::get-current-target()}.dll" define="NET_2_0;NET_3_5;REMOTING" debug="${not build.release}" optimize="${build.release}" doc="${doc.dir}/${target::get-current-target()}.xml">
      <sources>
        <include name="${source.dir}/protobuf-net/**/*.cs"/>
      </sources>
      <references>
        <include name="System.dll"/>
        <include name="System.Runtime.Serialization.dll"/>
        <include name="System.Xml.dll"/>
        <include name="System.ServiceModel.dll"/>
      </references>
    </csc>
  </target>
  
  <target name="Examples" depends="ProtoBuf">
    <csc target="exe" output="${build.dir}/${target::get-current-target()}.exe" define="NET_2_0;NET_3_5;REMOTING" debug="${not build.release}" optimize="${build.release}" doc="${doc.dir}/${target::get-current-target()}.xml">
      <sources>
        <include name="${source.dir}/Examples/**/*.cs"/>
      </sources>
      <references>
        <include name="Tools/nunit.framework.dll"/>
        <include name="${build.dir}/ProtoBuf.dll"/>
        <include name="Tools/MiscUtil.dll"/>
        <include name="System.dll"/>
        <include name="System.Runtime.Serialization.dll"/>
        <include name="System.Xml.dll"/>
        <include name="System.ServiceModel.dll"/>
        <include name="System.Runtime.Serialization.Formatters.Soap.dll"/>
      </references>
    </csc>
  </target>

  <target name="DatePipeline" depends="ProtoBuf">
    <csc target="exe" output="${build.dir}/${target::get-current-target()}.exe" define="NET_2_0;NET_3_5;REMOTING" debug="${not build.release}" optimize="${build.release}" doc="${doc.dir}/${target::get-current-target()}.xml">
      <sources>
        <include name="${source.dir}/DataPipeline/**/*.cs"/>
      </sources>
      <references>
        <include name="${build.dir}/ProtoBuf.dll"/>
        <include name="Tools/MiscUtil.dll"/>
        <include name="System.dll"/>
        <include name="System.Runtime.Serialization.dll"/>
        <include name="System.Xml.dll"/>
        <include name="System.ServiceModel.dll"/>
      </references>
    </csc>
  </target>

  <!-- 
  // This doesn't work quite yet via smcs, Mono's Silverlight compiler.
  // There's some missing pieces in the Moonlight libraries that need to be filled.
  <target name="ProtoBuf.Silverlight" depends="init">
    <property name="nant.settings.currentframework" value="moonlight-2.0" />
    <csc target="library" output="${build.dir}/${target::get-current-target()}.dll" debug="${not build.release}" optimize="${build.release}" doc="${doc.dir}/${target::get-current-target()}.xml">
      <sources>
        <include name="${source.dir}/protobuf-net_Silverlight/**/*.cs"/>
      </sources>
      <references>
        <include name="System.Core.dll"/>
        <include name="System.Runtime.Serialization.dll"/>
        <include name="System.Xml.dll"/>
        <include name="System.Xml.Core.dll"/>
        <include name="System.Xml.Serialization.dll"/>
        <include name="System.ServiceModel.dll"/>
      </references>
    </csc>
  </target> 
  -->

  <target name="all">
    <call target="init"/>
    <call target="ProtoBuf"/>
    <call target="DatePipeline"/>
    <call target="Examples"/>
  </target>

  <target name="clean">
    <delete failonerror="false">
      <fileset basedir="${build.dir}">
        <include name="*.dll"/>
        <include name="*.mdb"/>
        <include name="*.pdb"/>
        <include name="*.exe"/>
      </fileset>
    </delete>
  </target>

</project>
